/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package leclaironraporteur;

import java.util.ArrayList;
import javax.swing.ButtonGroup;
import javax.swing.ButtonModel;
import javax.swing.DefaultButtonModel;
import javax.swing.DefaultListModel;
import javax.swing.JRadioButton;
import java.io.*;
import javax.swing.JDialog;

/**
 *
 * @author mrpar_000
 */
public class TraitementWindow extends javax.swing.JFrame {

    private Categorie selCat;
    private MainWindow mw;
    private int ind = -1, indv = -1;
    private boolean edit = false;
    private News ntmp = new News();
    
    public TraitementWindow(String titre) {
        initComponents();
        nom.setText(titre);
    }

    TraitementWindow(String titre, MainWindow aThis) {
        
        initComponents();
        nom.setText(titre);
        mw = aThis;
        mw.setEnabled(false);
    }
    
    TraitementWindow(News n, int index, int index_vect, MainWindow aThis) {

    initComponents();
    
    mw = aThis;
    
    ind = index; // On passe l'index dans la Jlist
    indv = index_vect; // On passe l'index dans le vecteur
    edit = true; // Indique qu'on désire éditer 
    ntmp = n; // Notre news temporaire pour remplir les champs

    // On met dans les champs de la fenêtre les informations de la news ntmp
    
    nom.setText(n.getTitre());
    ArrayList<String> mc = new ArrayList<String>();
    mc = n.getMotCle();
    for(int i = 0; i < mc.size(); i++)
    {
        motCleCombo.addItem(mc.get(i));
    }

    important.setSelected(n.isImportant());
    commentaire.setText(n.getText());
     

    // Va sélectionne le bon radiobutton selon la catgéorie
    switch(n.getCategorie().getLibelle())
    {
        case "politique" :  radioViePolitique.setSelected(true);
                            break;

        case "international" :  radioInternationales.setSelected(true);
                                break;

        case "sport" :  radioInfosSports.setSelected(true);
                        break;

        case "ragot" :  radioRagots.setSelected(true);
                        break;
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        radioButtons = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        radioInternationales = new javax.swing.JRadioButton();
        radioViePolitique = new javax.swing.JRadioButton();
        radioInfosSports = new javax.swing.JRadioButton();
        radioRagots = new javax.swing.JRadioButton();
        nom = new javax.swing.JTextField();
        motCleText = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        commentaire = new javax.swing.JTextArea();
        motCleCombo = new javax.swing.JComboBox<>();
        important = new javax.swing.JCheckBox();
        ajouter = new javax.swing.JButton();
        valider = new javax.swing.JButton();
        annuler = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Traitement de base d'une news");

        jLabel1.setText("News :");

        jLabel2.setText("Mot-clé");

        jLabel3.setText("Commentaire");

        jLabel4.setText("Mots-clé");

        radioButtons.add(radioInternationales);
        radioInternationales.setText("Internationales");
        radioInternationales.setToolTipText("C'est sympa");
        radioInternationales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioInternationalesActionPerformed(evt);
            }
        });

        radioButtons.add(radioViePolitique);
        radioViePolitique.setText("Vie Politique");
        radioViePolitique.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioViePolitiqueActionPerformed(evt);
            }
        });

        radioButtons.add(radioInfosSports);
        radioInfosSports.setText("Infos sports");
        radioInfosSports.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioInfosSportsActionPerformed(evt);
            }
        });

        radioButtons.add(radioRagots);
        radioRagots.setText("Ragots et potins");
        radioRagots.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioRagotsActionPerformed(evt);
            }
        });

        commentaire.setColumns(20);
        commentaire.setRows(5);
        jScrollPane1.setViewportView(commentaire);

        important.setText("Important");

        ajouter.setText("+");
        ajouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ajouterActionPerformed(evt);
            }
        });

        valider.setText("Valider");
        valider.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                validerActionPerformed(evt);
            }
        });

        annuler.setText("Annuler");
        annuler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                annulerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(important)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(radioInternationales)
                                .addGap(69, 69, 69)
                                .addComponent(radioViePolitique)
                                .addGap(69, 69, 69)
                                .addComponent(radioInfosSports)
                                .addGap(69, 69, 69)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(ajouter)
                                        .addGap(29, 29, 29)
                                        .addComponent(jLabel4)
                                        .addGap(18, 18, 18)
                                        .addComponent(motCleCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(radioRagots))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(nom, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(motCleText, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(126, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(274, 274, 274)
                .addComponent(valider, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(annuler, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(nom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addComponent(important)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioInternationales)
                    .addComponent(radioViePolitique)
                    .addComponent(radioInfosSports)
                    .addComponent(radioRagots))
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(motCleText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(motCleCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ajouter))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(valider)
                    .addComponent(annuler))
                .addContainerGap(11, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void radioInfosSportsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioInfosSportsActionPerformed

    }//GEN-LAST:event_radioInfosSportsActionPerformed

    private void ajouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ajouterActionPerformed
        if(!"".equals(motCleText.getText())) // Si il y a quelque chose d'écrit
        {
           // On sépare la chaine en mots délimités par le caractère -
           String tmp = motCleText.getText();
           String  [] mots = tmp.split("-");
           for(String mot:mots)motCleCombo.addItem(mot);
        }
        motCleText.setText(null);
    }//GEN-LAST:event_ajouterActionPerformed

    private void validerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_validerActionPerformed
        
        if(radioInternationales.isSelected() == false && radioInfosSports.isSelected() == false && radioRagots.isSelected() == false && radioViePolitique.isSelected() == false)return;
        
        Appliquer();
        
        try{
            FileOutputStream fos = new FileOutputStream("listenews.dat");
            ObjectOutputStream oos = new ObjectOutputStream(fos);
            oos.writeObject(mw.getListeNews());
            fos.close();
            oos.close();
        }catch(Exception e)
        {
            new JDialog(this, "BUGBUGBUG").setVisible(true);
        }
        
        mw.setEnabled(true);
        
        dispose();
    }//GEN-LAST:event_validerActionPerformed

    public void Appliquer()
    {
        DefaultListModel dlm = new DefaultListModel();
        
        News news = new News();
        
        /* On n'appelle la fonction de Suppression qu'à la validation car si on annule l'édition
        * on ne veut pas que la news soit supprimée        *
        */
        if(edit)
        {
            Suppression();
        }
        
        // On définit la catégorie selon le radiobutton sélectionné
        if(radioInternationales.isSelected())news.setCategorie(Categorie.INTERNATIONAL);
        else if(radioViePolitique.isSelected())news.setCategorie(Categorie.POLITIQUE);
        else if(radioInfosSports.isSelected())news.setCategorie(Categorie.SPORT);
        else if(radioRagots.isSelected())news.setCategorie(Categorie.RAGOT);
                
        news.setTitre(nom.getText());
        news.setImportant(important.isSelected());
        
        // On ajoute les mots-clés à l'ArrayList qui va contenir ceux-ci au sein de la news
        ArrayList<String> mc = new ArrayList<String>();
        for(int i=0;i<motCleCombo.getItemCount();i++)
        {
            mc.add(motCleCombo.getItemAt(i));
        }
        news.setMotCle(mc);
        news.setText(commentaire.getText());
        
        mw.getListeNews().add(news);
        
        mw.saveNews();
        
        // On ajoute le titre de la news dans la JList
        switch(ntmp.getCategorie().getLibelle())
        {
            case "politique" :  mw.getListPolModel().addElement(news.getTitre());
                                break;

            case "sport" :  mw.getListSportModel().addElement(news.getTitre());
                            break;

            case "international" :  mw.getListPolModel().addElement(news.getTitre());
                                    break;

            case "ragot" :  mw.getListPolModel().addElement(news.getTitre());
                            break;
        }
    }
    
    void Suppression()
    {
   
        // On enlève de l'ArrayList l'élément qui se voit modifié pour ne pas avoir de doublons
        ArrayList<News> listeNews = new ArrayList<News>();
        listeNews = mw.getListeNews();
        listeNews.remove(indv);
        mw.setListeNews(listeNews);
        
        DefaultListModel dlm = new DefaultListModel();
        
        // On enlève de la JList l'élément qui se voit modifié pour ne pas avoir de doublons
        switch(ntmp.getCategorie().getLibelle())
        {
            case "politique" :  dlm = mw.getListPolModel(); 
                                dlm.remove(ind);
                                mw.setListPolModel(dlm);
                                break;

            case "international" :  dlm = mw.getListInterModel();
                                    dlm.remove(ind);
                                    mw.setListInterModel(dlm);
                                    break;

            case "sport" :  dlm = mw.getListSportModel();
                            mw.getListSportModel().remove(ind);
                            mw.setListSportModel(dlm);
                            break;

            case "ragot" :  dlm = mw.getListRagotModel();
                            dlm.remove(ind);
                            mw.setListRagotModel(dlm);
                            break;
        }
        
        edit = false;
        
    }
    
    private void annulerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_annulerActionPerformed
        if(edit)
            edit = false; // Ainsi on ne sera pas en mode edit au prochain lancement si on ajoute simplement une news
        mw.setEnabled(true);
        dispose();
    }//GEN-LAST:event_annulerActionPerformed

    private void radioInternationalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioInternationalesActionPerformed

    }//GEN-LAST:event_radioInternationalesActionPerformed

    private void radioViePolitiqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioViePolitiqueActionPerformed

    }//GEN-LAST:event_radioViePolitiqueActionPerformed

    private void radioRagotsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioRagotsActionPerformed

    }//GEN-LAST:event_radioRagotsActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ajouter;
    private javax.swing.JButton annuler;
    private javax.swing.JTextArea commentaire;
    private javax.swing.JCheckBox important;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> motCleCombo;
    private javax.swing.JTextField motCleText;
    private javax.swing.JTextField nom;
    private javax.swing.ButtonGroup radioButtons;
    private javax.swing.JRadioButton radioInfosSports;
    private javax.swing.JRadioButton radioInternationales;
    private javax.swing.JRadioButton radioRagots;
    private javax.swing.JRadioButton radioViePolitique;
    private javax.swing.JButton valider;
    // End of variables declaration//GEN-END:variables
}
